name: Deploy

on:
  workflow_dispatch:
    inputs:
      commit:
        description: "Commit SHA to Deploy (defaults to latest)"
        required: false

run-name: Deploy ${{ github.event.inputs.commit || github.sha }}

jobs:
  deploy:
    environment: production
    runs-on: ubuntu-latest
    env:
      BINARY_NAME: solana-rpc-proxy
      BINARY_PATH: ~/.local/bin
      TARGET: ${{ secrets.TARGET || 'aarch64-unknown-linux-gnu' }}
      SSH_USER_HOST: solana-rpc-proxy@${{ secrets.HOST }}
      SYSTEMD_UNIT_PATH: ~/.config/systemd/user
    steps:
      - id: setup
        uses: actions/github-script@v7
        with:
          script: |
            core.setOutput('commit_sha', '${{ github.event.inputs.commit || github.sha }}');

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.setup.outputs.commit_sha }}

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ env.TARGET }}

      - name: Install Cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build binary
        run: cross build --verbose --locked --release --target $TARGET

      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Adding the host to known_hosts...
        run: ssh-keyscan ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Stopping the service...
        run: ssh $SSH_USER_HOST "systemctl --user stop $BINARY_NAME.service || true"

      - name: Copying the binary...
        run: scp $BINARY_NAME $SSH_USER_HOST:$BINARY_PATH/$BINARY_NAME

      - name: Making the binary executable...
        run: ssh $SSH_USER_HOST "chmod +x $BINARY_PATH/$BINARY_NAME"

      - name: Copying the service file...
        run: scp $BINARY_NAME.service $SSH_USER_HOST:$SYSTEMD_UNIT_PATH/$BINARY_NAME.service

      - name: Reloading systemd configuration...
        run: ssh $SSH_USER_HOST "systemctl --user daemon-reload"

      - name: Starting the service...
        run: ssh $SSH_USER_HOST "systemctl --user start $BINARY_NAME.service"
